async function restoreProjectState(e){const t=document.getElementById("article-heading"),a=await apex.server.process("RESTORE_PROJECT_STATE",{x01:e}),o=JSON.parse(a.state);apex.debug.info("projectState: ",o);const n=core.getProject(e,{state:o}),r=n.sheet("Sheet 1"),s=r.object("Heading 1",{y:0,opacity:core.types.number(1,{range:[0,1]})});s.onValuesChange(e=>{t.style.transform=`translateY(${e.y}px)`,t.style.opacity=e.opacity}),n.ready.then(()=>{apex.debug.info("project is ready",n),r.sequence.play({iterationCount:1/0})})}import"https://cdn.jsdelivr.net/npm/@theatre/browser-bundles@0.7.2/dist/core-only.min.js";const{core:core}=Theatre,projectId=apex.item("P1_PROJECT_ID").getValue();apex.debug.info("projectId: ",projectId);const channel=new BroadcastChannel("control-theatre");channel.addEventListener("message",e=>{apex.debug.info("status: ",e),"status"===e.data.type&&apex.item("P1_STATUS").setValue(e.data.message)});const controlElement=document.getElementById("CONTROLS"),controls=apex.actions.createContext("controls",controlElement);controls.add([{name:"EXPORT",action:(e,t,a)=>{channel.postMessage({type:"export"})}},{name:"RELOAD",action:(e,t,a)=>{window.location.reload(),apex.item("P1_STATUS").setValue(null)}},{name:"IMPORT",action:(e,t,a)=>{restoreProjectState(projectId),apex.item("P1_STATUS").setValue("projectState is restored.")}}]);